//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceReport.ServiceMetier {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/MetierPM")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Personne", Namespace="http://schemas.datacontract.org/2004/07/MetierPM.Model")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceReport.ServiceMetier.Etudiant))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceReport.ServiceMetier.Expert))]
    public partial class Personne : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrenomField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nom {
            get {
                return this.NomField;
            }
            set {
                if ((object.ReferenceEquals(this.NomField, value) != true)) {
                    this.NomField = value;
                    this.RaisePropertyChanged("Nom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Prenom {
            get {
                return this.PrenomField;
            }
            set {
                if ((object.ReferenceEquals(this.PrenomField, value) != true)) {
                    this.PrenomField = value;
                    this.RaisePropertyChanged("Prenom");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Etudiant", Namespace="http://schemas.datacontract.org/2004/07/MetierPM.Model")]
    [System.SerializableAttribute()]
    public partial class Etudiant : ServiceReport.ServiceMetier.Personne {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateDeNaissanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceReport.ServiceMetier.Departement DepartementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DepartementIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumeroEtudiantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProgrammeEtudesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateDeNaissance {
            get {
                return this.DateDeNaissanceField;
            }
            set {
                if ((this.DateDeNaissanceField.Equals(value) != true)) {
                    this.DateDeNaissanceField = value;
                    this.RaisePropertyChanged("DateDeNaissance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceReport.ServiceMetier.Departement Departement {
            get {
                return this.DepartementField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartementField, value) != true)) {
                    this.DepartementField = value;
                    this.RaisePropertyChanged("Departement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DepartementId {
            get {
                return this.DepartementIdField;
            }
            set {
                if ((this.DepartementIdField.Equals(value) != true)) {
                    this.DepartementIdField = value;
                    this.RaisePropertyChanged("DepartementId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NumeroEtudiant {
            get {
                return this.NumeroEtudiantField;
            }
            set {
                if ((object.ReferenceEquals(this.NumeroEtudiantField, value) != true)) {
                    this.NumeroEtudiantField = value;
                    this.RaisePropertyChanged("NumeroEtudiant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProgrammeEtudes {
            get {
                return this.ProgrammeEtudesField;
            }
            set {
                if ((object.ReferenceEquals(this.ProgrammeEtudesField, value) != true)) {
                    this.ProgrammeEtudesField = value;
                    this.RaisePropertyChanged("ProgrammeEtudes");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Expert", Namespace="http://schemas.datacontract.org/2004/07/MetierPM.Model")]
    [System.SerializableAttribute()]
    public partial class Expert : ServiceReport.ServiceMetier.Personne {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpecialisteField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Specialiste {
            get {
                return this.SpecialisteField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecialisteField, value) != true)) {
                    this.SpecialisteField = value;
                    this.RaisePropertyChanged("Specialiste");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Departement", Namespace="http://schemas.datacontract.org/2004/07/MetierPM.Model")]
    [System.SerializableAttribute()]
    public partial class Departement : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceReport.ServiceMetier.Etudiant[] EtudiantsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceReport.ServiceMetier.Faculte FaculteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FacultéIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceReport.ServiceMetier.Etudiant[] Etudiants {
            get {
                return this.EtudiantsField;
            }
            set {
                if ((object.ReferenceEquals(this.EtudiantsField, value) != true)) {
                    this.EtudiantsField = value;
                    this.RaisePropertyChanged("Etudiants");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceReport.ServiceMetier.Faculte Faculte {
            get {
                return this.FaculteField;
            }
            set {
                if ((object.ReferenceEquals(this.FaculteField, value) != true)) {
                    this.FaculteField = value;
                    this.RaisePropertyChanged("Faculte");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FacultéId {
            get {
                return this.FacultéIdField;
            }
            set {
                if ((this.FacultéIdField.Equals(value) != true)) {
                    this.FacultéIdField = value;
                    this.RaisePropertyChanged("FacultéId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nom {
            get {
                return this.NomField;
            }
            set {
                if ((object.ReferenceEquals(this.NomField, value) != true)) {
                    this.NomField = value;
                    this.RaisePropertyChanged("Nom");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Faculte", Namespace="http://schemas.datacontract.org/2004/07/MetierPM.Model")]
    [System.SerializableAttribute()]
    public partial class Faculte : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nom {
            get {
                return this.NomField;
            }
            set {
                if ((object.ReferenceEquals(this.NomField, value) != true)) {
                    this.NomField = value;
                    this.RaisePropertyChanged("Nom");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceMetier.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        ServiceReport.ServiceMetier.CompositeType GetDataUsingDataContract(ServiceReport.ServiceMetier.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<ServiceReport.ServiceMetier.CompositeType> GetDataUsingDataContractAsync(ServiceReport.ServiceMetier.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addExpert", ReplyAction="http://tempuri.org/IService1/addExpertResponse")]
        bool addExpert(ServiceReport.ServiceMetier.Expert expert);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addExpert", ReplyAction="http://tempuri.org/IService1/addExpertResponse")]
        System.Threading.Tasks.Task<bool> addExpertAsync(ServiceReport.ServiceMetier.Expert expert);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateExpert", ReplyAction="http://tempuri.org/IService1/updateExpertResponse")]
        bool updateExpert(ServiceReport.ServiceMetier.Expert expert);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateExpert", ReplyAction="http://tempuri.org/IService1/updateExpertResponse")]
        System.Threading.Tasks.Task<bool> updateExpertAsync(ServiceReport.ServiceMetier.Expert expert);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/deleteExpert", ReplyAction="http://tempuri.org/IService1/deleteExpertResponse")]
        bool deleteExpert(System.Nullable<int> IdExpert);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/deleteExpert", ReplyAction="http://tempuri.org/IService1/deleteExpertResponse")]
        System.Threading.Tasks.Task<bool> deleteExpertAsync(System.Nullable<int> IdExpert);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getAllExpert", ReplyAction="http://tempuri.org/IService1/getAllExpertResponse")]
        ServiceReport.ServiceMetier.Expert[] getAllExpert();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getAllExpert", ReplyAction="http://tempuri.org/IService1/getAllExpertResponse")]
        System.Threading.Tasks.Task<ServiceReport.ServiceMetier.Expert[]> getAllExpertAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getExpert", ReplyAction="http://tempuri.org/IService1/getExpertResponse")]
        ServiceReport.ServiceMetier.Expert getExpert(System.Nullable<int> IdExpert);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getExpert", ReplyAction="http://tempuri.org/IService1/getExpertResponse")]
        System.Threading.Tasks.Task<ServiceReport.ServiceMetier.Expert> getExpertAsync(System.Nullable<int> IdExpert);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddEtudiant", ReplyAction="http://tempuri.org/IService1/AddEtudiantResponse")]
        bool AddEtudiant(ServiceReport.ServiceMetier.Etudiant etudiant);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddEtudiant", ReplyAction="http://tempuri.org/IService1/AddEtudiantResponse")]
        System.Threading.Tasks.Task<bool> AddEtudiantAsync(ServiceReport.ServiceMetier.Etudiant etudiant);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getAllEtudiant", ReplyAction="http://tempuri.org/IService1/getAllEtudiantResponse")]
        ServiceReport.ServiceMetier.Etudiant[] getAllEtudiant();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getAllEtudiant", ReplyAction="http://tempuri.org/IService1/getAllEtudiantResponse")]
        System.Threading.Tasks.Task<ServiceReport.ServiceMetier.Etudiant[]> getAllEtudiantAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateEtudiant", ReplyAction="http://tempuri.org/IService1/updateEtudiantResponse")]
        bool updateEtudiant(ServiceReport.ServiceMetier.Etudiant etudiant);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateEtudiant", ReplyAction="http://tempuri.org/IService1/updateEtudiantResponse")]
        System.Threading.Tasks.Task<bool> updateEtudiantAsync(ServiceReport.ServiceMetier.Etudiant etudiant);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/deleteEtudiant", ReplyAction="http://tempuri.org/IService1/deleteEtudiantResponse")]
        bool deleteEtudiant(System.Nullable<int> id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/deleteEtudiant", ReplyAction="http://tempuri.org/IService1/deleteEtudiantResponse")]
        System.Threading.Tasks.Task<bool> deleteEtudiantAsync(System.Nullable<int> id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getEtudiant", ReplyAction="http://tempuri.org/IService1/getEtudiantResponse")]
        ServiceReport.ServiceMetier.Etudiant getEtudiant(System.Nullable<int> IdEtudiant);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getEtudiant", ReplyAction="http://tempuri.org/IService1/getEtudiantResponse")]
        System.Threading.Tasks.Task<ServiceReport.ServiceMetier.Etudiant> getEtudiantAsync(System.Nullable<int> IdEtudiant);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : ServiceReport.ServiceMetier.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<ServiceReport.ServiceMetier.IService1>, ServiceReport.ServiceMetier.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public ServiceReport.ServiceMetier.CompositeType GetDataUsingDataContract(ServiceReport.ServiceMetier.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<ServiceReport.ServiceMetier.CompositeType> GetDataUsingDataContractAsync(ServiceReport.ServiceMetier.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public bool addExpert(ServiceReport.ServiceMetier.Expert expert) {
            return base.Channel.addExpert(expert);
        }
        
        public System.Threading.Tasks.Task<bool> addExpertAsync(ServiceReport.ServiceMetier.Expert expert) {
            return base.Channel.addExpertAsync(expert);
        }
        
        public bool updateExpert(ServiceReport.ServiceMetier.Expert expert) {
            return base.Channel.updateExpert(expert);
        }
        
        public System.Threading.Tasks.Task<bool> updateExpertAsync(ServiceReport.ServiceMetier.Expert expert) {
            return base.Channel.updateExpertAsync(expert);
        }
        
        public bool deleteExpert(System.Nullable<int> IdExpert) {
            return base.Channel.deleteExpert(IdExpert);
        }
        
        public System.Threading.Tasks.Task<bool> deleteExpertAsync(System.Nullable<int> IdExpert) {
            return base.Channel.deleteExpertAsync(IdExpert);
        }
        
        public ServiceReport.ServiceMetier.Expert[] getAllExpert() {
            return base.Channel.getAllExpert();
        }
        
        public System.Threading.Tasks.Task<ServiceReport.ServiceMetier.Expert[]> getAllExpertAsync() {
            return base.Channel.getAllExpertAsync();
        }
        
        public ServiceReport.ServiceMetier.Expert getExpert(System.Nullable<int> IdExpert) {
            return base.Channel.getExpert(IdExpert);
        }
        
        public System.Threading.Tasks.Task<ServiceReport.ServiceMetier.Expert> getExpertAsync(System.Nullable<int> IdExpert) {
            return base.Channel.getExpertAsync(IdExpert);
        }
        
        public bool AddEtudiant(ServiceReport.ServiceMetier.Etudiant etudiant) {
            return base.Channel.AddEtudiant(etudiant);
        }
        
        public System.Threading.Tasks.Task<bool> AddEtudiantAsync(ServiceReport.ServiceMetier.Etudiant etudiant) {
            return base.Channel.AddEtudiantAsync(etudiant);
        }
        
        public ServiceReport.ServiceMetier.Etudiant[] getAllEtudiant() {
            return base.Channel.getAllEtudiant();
        }
        
        public System.Threading.Tasks.Task<ServiceReport.ServiceMetier.Etudiant[]> getAllEtudiantAsync() {
            return base.Channel.getAllEtudiantAsync();
        }
        
        public bool updateEtudiant(ServiceReport.ServiceMetier.Etudiant etudiant) {
            return base.Channel.updateEtudiant(etudiant);
        }
        
        public System.Threading.Tasks.Task<bool> updateEtudiantAsync(ServiceReport.ServiceMetier.Etudiant etudiant) {
            return base.Channel.updateEtudiantAsync(etudiant);
        }
        
        public bool deleteEtudiant(System.Nullable<int> id) {
            return base.Channel.deleteEtudiant(id);
        }
        
        public System.Threading.Tasks.Task<bool> deleteEtudiantAsync(System.Nullable<int> id) {
            return base.Channel.deleteEtudiantAsync(id);
        }
        
        public ServiceReport.ServiceMetier.Etudiant getEtudiant(System.Nullable<int> IdEtudiant) {
            return base.Channel.getEtudiant(IdEtudiant);
        }
        
        public System.Threading.Tasks.Task<ServiceReport.ServiceMetier.Etudiant> getEtudiantAsync(System.Nullable<int> IdEtudiant) {
            return base.Channel.getEtudiantAsync(IdEtudiant);
        }
    }
}
